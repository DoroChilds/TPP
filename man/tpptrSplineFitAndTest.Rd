% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tpptrSplineFitAndTest.R
\name{tpptrSplineFitAndTest}
\alias{tpptrSplineFitAndTest}
\title{Perform spline fitting and analyse by moderated F-test}
\usage{
tpptrSplineFitAndTest(data, factorsH1, factorsH0 = c(), resultPath = NULL,
  ggplotTheme = tppDefaultTheme(), doPlot = TRUE, nCores = "max",
  splineDF = 4, additionalCols = NULL, verbose = FALSE)
}
\arguments{
\item{data}{the data to be fitted.}

\item{factorsH1}{which factors should be included in the alternative model?}

\item{factorsH0}{which factors should be included in the null model?}

\item{resultPath}{location where to store the spline plots per protein.}

\item{ggplotTheme}{ggplot theme for melting curve plots.}

\item{doPlot}{boolan value indicating whether melting curves should be 
plotted, or whether just the curve parameters should be returned.}

\item{nCores}{either a numerical value given the desired number of CPUs, or 
'max' to automatically assign the maximum possible number (default).}

\item{splineDF}{degrees of freedom for natural spline fitting.}

\item{additionalCols}{additional annotation per protein to append to the 
result table.}

\item{verbose}{plot name of each fitted protein to the command lin as a means
of progress report.}
}
\value{
A list of two data frames: 1. A long table containing the spline
  predictions per protein and TMT-label 2. A long table containing the
  hypothesis test results per protein.
}
\description{
A wrapper function around the functions \code{tpptrFitSplines}, 
\code{tpptrFTest}, \code{tpptrPlotSplines}, which fits natural splines to
  all proteins in a dataset and detect differential behaviour between
  conditions by a moderated F-test. The results are formatted as a wide table
  with one row per protein. This table contains all the original data, the
  test results, and (optionally) additional annotation columns for each 
  protein.
}
\details{
Plots of the natural spline fits will be stored in a subfolder with 
  name \code{Spline_Fits} at the location specified by \code{resultPath}.
  
  Argument \code{splineDF} specifies the degrees of freedom for natural
  spline fitting. As a single numeric value, it is directly passed on to the
  \code{splineDF} argument of \code{splines::ns}. Experience shows that
  \code{splineDF = 4} yields good results for TPP data sets with 10
  temperature points. It is also possible to provide a numeric vector. In
  this case, splines are fitted for each entry and the optimal value is
  chosen per protein using Akaike's Information criterion.
}
\examples{
data(hdacTR_smallExample)
tpptrData <- tpptrImport(configTable = hdacTR_config, data = hdacTR_data)
normResults <- tpptrNormalize(data = tpptrData, 
                              normReqs = tpptrDefaultNormReqs())
normData_eSets <- normResults$normData
longTables <- normData_eSets \%>\% tpptrTidyUpESets
fitData <- longTables \%>\% extract2("proteinMeasurements")
proteinInfos <- longTables \%>\% extract2("proteinAnnotation")
hdacSplineFits <- tpptrSplineFitAndTest(data = fitData,
                                        factorsH1 = "condition",
                                        additionalCols = proteinInfos, 
                                        nCores = 1)
# Show estimated splines for HDAC1:
filter(hdacSplineFits, Protein_ID == "HDAC1")
# Quality control: test for replicate-specific effects:
 testResults <- tpptrSplineFitAndTest(data = fitData,
                                     factorsH1 = "replicate")
# -> Which proteins showed significant replicate effects?
testResults \%>\% filter(p_adj_NPARC <= 0.01) \%>\% select(Protein_ID, p_adj_NPARC)

}
\seealso{
\code{\link{ns}, \link{AICc}, \link{tppDefaultTheme}}
}

